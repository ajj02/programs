(1)given arrival and departure times of all trains that reach a railway station.
find the minimum number of platforms required for the railway station 
so that no train is kept waiting.
consider that al
be the same for a train but we can have arrival time of one 
train equal to departure time of the other.at any given instance of time,
same platform can not be used for both departure of a train and arrival of another train.in such cases,we need different 
platforms.

ex 1:
input : n=6
arr[]={0900,0940,0950,1100,1500,1800}
dep[]=0910,1200,1120,1130,1900,2000}
output : 3
Explanation :
minimum 3 platforms are required to safely arrive and depart all trains.


(2)given an array arr[] denoting heights of N towers and a positive integer k,you have
to modify the height of each tower either by increasing or decreasing them by k only once.
after modifying ,height should be a nn-negative integer.
find out the minimum possibe difference oof the height of shortest and longest
towers after you have modified each tower.
note : it is compulsary to increase or decrease(if possible)
ex: 1
input : 
k=2,n=4
arr[]={1,5,8,10}
output :
5
Expla: the array can be modified as {3,3,6,8} the difference between the

public static int findPlatform(int[] arr, int[] dep,
                                   int n)
    {
        int plat_needed = 1, result = 1;
        int i = 0, j = 0;
        for (i = 0; i < n; i++) {
            plat_needed = 1;
            for (j = 0; j < n; j++) {
                if (i != j)
                    if (arr[i] >= arr[j]
                        && dep[j] >= arr[i])
                        plat_needed++;
            }
            result = Math.Max(result, plat_needed);
        } 
        return result;
    } 
    static public void Main()
    { 
        int[] arr = { 0900, 0940, 0950, 1100, 1500, 1800 };
        int[] dep = { 0910, 1200, 1120, 1130, 1900, 2000 };
        int n = 6;
        Console.WriteLine(findPlatform(arr, dep, n));
    }
}   


2)using System;
 
namespace forgetCode
{
    class Program
    {
        public static void Main()
        {
            int[] a = new int[100];
            Console.WriteLine("Number of elements in the array ?");
            string s = Console.ReadLine();
            int x = Int32.Parse(s);
            
            Console.WriteLine(" Enter array elements ");
           
            for (int i = 0; i < x; i++)
            {
                string s1 = Console.ReadLine();
                a[i] = Int32.Parse(s1);
            }
            
            Console.WriteLine("Enter Search element");
          
            string s3 = Console.ReadLine();
            int x2 = Int32.Parse(s3);
            int low = 0;
            int high = x - 1;
            while (low <= high)
            {
                int mid = (low + high) / 2;
                if (x2 < a[mid])
                    high = mid - 1;
                else if (x2 > a[mid])
                    low = mid + 1;
                else if (x2 == a[mid])
                {
                    
                    Console.WriteLine("Search successful");
                    
                    Console.WriteLine("Element 0 found at location 1 ", x2, mid + 1);
                    return;
                }
            }
            Console.WriteLine("Search unsuccessful");
        }
    }
}